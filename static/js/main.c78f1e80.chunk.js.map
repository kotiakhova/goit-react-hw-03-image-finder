{"version":3,"sources":["components/SearchBar/SearchBar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Loader/Loader.jsx","components/Button/Button.jsx","components/Modal/Modal.jsx","services/imagesApi.js","components/App.jsx","index.jsx"],"names":["SearchBar","state","inputValue","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","onSubmit","className","this","type","onChange","placeholder","Component","ImageGalleryItem","handleClick","handleImageClick","largeImg","src","smallImg","alt","onClick","ImageGallery","images","map","id","webformatURL","largeImageURL","key","Loader","color","height","width","React","Button","Modal","handleKeyDown","code","onClose","window","addEventListener","removeEventListener","searchQuery","page","axios","get","then","response","data","hits","App","loading","error","largeImageUrl","showModal","fetchImages","imagesApi","newImages","prevState","catch","finally","handleSearchFormSubmit","query","toggleModal","largeImage","prevProps","scrollTo","top","document","documentElement","scrollHeight","behavior","message","length","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c78f1e80.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nexport default class SearchBar extends Component  {\n    state = {\n        inputValue: ''\n    }\n    handleChange = e => {\n        this.setState({inputValue: e.target.value})\n    }\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.onSubmit(this.state.inputValue);\n        this.setState({inputValue: ''})\n    }\n    render() {\n        return (\n            <>\n                <header className=\"Searchbar\">\n                <form \n                    className=\"SearchForm\"\n                    onSubmit={this.handleSubmit}\n                    >\n                    <button type=\"submit\" className=\"SearchForm-button\">\n                    <span className=\"SearchForm-button-label\">Search</span>\n                    </button>\n                    <input\n                    className=\"SearchForm-input\"\n                    type=\"text\"\n                    value = {this.state.inputValue}\n                    onChange={this.handleChange}\n                    // // autocomplete=\"off\"\n                    // autofocus\n                    placeholder=\"Search images and photos\"\n                    />\n                </form>\n                </header>\n            </>\n        )\n\n    }\n\n}","import React, { Component } from 'react';\n\nexport default class ImageGalleryItem extends Component  {\n    handleClick = ()=> {\n        this.props.handleImageClick(this.props.largeImg)\n    }\n    render() {\n        return (\n            <li className=\"ImageGalleryItem\">\n                <img src={this.props.smallImg} className=\"ImageGalleryItem-image\" alt=\"img\" onClick={this.handleClick}/>\n            </li>\n    )\n    }\n}","import React from 'react';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem'\n\nexport default function ImageGallery ({images, handleImageClick}) {\n    return (\n        <>\n        <ul className=\"ImageGallery\">\n            {images.map(({id, webformatURL,largeImageURL}) => ( \n            <ImageGalleryItem \n                key={id}\n                smallImg={webformatURL}\n                largeImg={largeImageURL}\n                handleImageClick={handleImageClick}\n                />))}\n        </ul>\n\n        </>\n    )\n}","import React from 'react';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\n\nimport Loading from 'react-loader-spinner'\n export default class Loader extends React.Component {\n  //other logic\n    render() {\n\t return(\n\t  <Loading\n\t     type=\"Puff\"\n\t     color=\"#00BFFF\"\n\t     height={100}\n\t     width={100}\n\n\t  />\n\t );\n    }\n }","import React from 'react';\n\n\nexport default function Button ({handleClick}) {\n    return (\n        <>\n        <button className=\"Button\" onClick={handleClick}>Load more</button>\n        </>\n    )\n}","import React, { Component } from 'react';\n\nexport default class Modal extends Component {\n    componentDidMount() {\n        window.addEventListener('keydown', this.handleKeyDown);\n      }\n    \n      componentWillUnmount() {\n        window.removeEventListener('keydown', this.handleKeyDown);\n      }\n      handleKeyDown = e => {\n        if (e.code === 'Escape') {\n          this.props.onClose();\n        }\n      };\n    render(){\n        return (\n            <>\n                <div className=\"Overlay\">\n                <div className=\"Modal\">\n                    <img src={this.props.largeImg} alt=\"img\" />\n                </div>\n                </div>\n            </>\n        )\n\n    }\n\n}","import axios from 'axios';\n\nconst fetchImagesWithQuery = (searchQuery,page=1) => {\n  return axios\n    .get(`https://pixabay.com/api/?image_type=photo&orientation=horizontal&q=\"${searchQuery}\"&page=${page}&per_page=12&key=17463048-1bad905815e37f05ce3b4d0af`)\n    .then(response => response.data.hits);\n};\n\nexport default {\n    fetchImagesWithQuery,\n};\n\n","import React, { Component } from 'react';\n\nimport SearchBar from './SearchBar/SearchBar'\nimport ImageGallery from './ImageGallery/ImageGallery'\nimport Loader from './Loader/Loader'\nimport Button from './Button/Button'\nimport Modal from './Modal/Modal'\n\nimport imagesApi from '../services/imagesApi'\nimport './styles.css'\n\nexport default class App extends Component {\n    state = {\n        images: [],\n        loading: false,\n        error: null,\n        searchQuery: '',\n        page: 1,   \n        largeImageUrl: null,\n        showModal: false\n    }\n\n\n    componentDidUpdate(prevProps, prevState) {\n        const prevQuery = prevState.searchQuery;\n        const nextQuery = this.state.searchQuery;\n    \n        if (prevQuery !== nextQuery) {\n          this.fetchImages();\n          window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: 'smooth',\n          });\n        }\n      }\n    fetchImages = () => {\n        const {searchQuery, page } = this.state\n\n        this.setState({loading: true})\n        imagesApi.fetchImagesWithQuery(searchQuery, page)\n        .then(newImages => { this.setState(prevState => ({images: [...prevState.images, ...newImages ], page: prevState.page +1}))})                \n        .catch(error => this.setState({error}))\n        .finally(()=> this.setState({ loading: false }))\n    }\n\n    handleSearchFormSubmit = query => {\n        this.setState({\n          searchQuery: query,\n          page: 1,\n          images: [],\n        });\n      };\n\n    toggleModal = largeImage => {\n        this.state.largeImageUrl ? \n        this.setState({ largeImageUrl: null}):this.setState({\n            largeImageUrl: largeImage\n          })\n    }\n    \n\n    render() {\n        const {loading, error, images,largeImageUrl} = this.state\n        return (\n            <>\n            <SearchBar \n            onSubmit={this.handleSearchFormSubmit}\n            />\n            {error && <p>Whoops, something went wrong: {error.message}</p>}\n            {loading && (<Loader />)}\n            {images.length > 0 && <ImageGallery images={images} handleImageClick={this.toggleModal}/>}    \n            {images.length > 0 && !loading&& <Button handleClick={this.fetchImages}/>}    \n            {largeImageUrl && <Modal largeImg={largeImageUrl} onClose={this.toggleModal}/>}\n            </> \n        )\n      }\n\n}\n\n// реализовать закрытие модального окна","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App'\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}